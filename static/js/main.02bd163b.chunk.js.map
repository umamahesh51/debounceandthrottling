{"version":3,"sources":["components/SearchBar.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","name","placeholder","keyUpHandler","className","style","color","type","onKeyUp","Search","useState","normalSearchString","setNormalSearchString","debounceSearchString","setDebounceSearchString","normalSearchcounter","setNormalSearchCounter","debounceSearchCounter","setDebounceCounter","normalHeavyCall","setNormalHeavyCall","normalHeavyCallCounter","setNormalHeavyCallCounter","throttlingHeavyCall","setThrottlingHeavyCall","throttlingHeavyCallCounter","setThrottlingHeavyCallCounter","fn","limit","lookup","time","timer","context","this","args","arguments","clearTimeout","setTimeout","apply","debounce","betterAPiCallFunction","_","throttle","leading","id","onClick","value","onChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAYeA,G,KAVG,SAACC,GACf,IAAIC,EAAOD,EAAMC,KACbC,EAAc,MAAQD,EAAM,UAC5BE,EAAeH,EAAMG,aACzB,OACA,sBAAKC,UAAU,aAAf,UACI,uBAAMC,MAAO,CAACC,MAAM,SAApB,UAA+BL,EAA/B,iBACA,uBAAOM,KAAO,OAAOC,QAASL,EAAcC,UAAU,cAAcF,YAAaA,S,gBC0E1EO,EA/EA,SAACT,GAAW,IAAD,EAE8BU,mBAAS,IAFvC,mBAEfC,EAFe,KAEKC,EAFL,OAGkCF,mBAAS,IAH3C,mBAGfG,EAHe,KAGOC,EAHP,OAIgCJ,mBAAS,GAJzC,mBAIfK,EAJe,KAIMC,EAJN,OAK8BN,mBAAS,GALvC,mBAKfO,EALe,KAKQC,EALR,OAOwBR,mBAAS,IAPjC,mBAOfS,EAPe,KAOEC,EAPF,OAQsCV,mBAAS,GAR/C,mBAQfW,EARe,KAQSC,EART,OASgCZ,mBAAS,IATzC,mBASfa,EATe,KASMC,EATN,OAU8Cd,mBAAS,GAVvD,mBAUfe,EAVe,KAUaC,EAVb,KAsBtB,IAuBkBC,EAAIC,EAXhBC,EAZW,SAACF,EAAIG,GAClB,IAAIC,EACJ,OAAO,WAEH,IAAIC,EAAUC,KACVC,EAAOC,UACXC,aAAaL,GACbA,EAAQM,YAAW,WACfV,EAAGW,MAAMN,EAASE,KACnBJ,IAGIS,EAjBf,WACIrB,EAAmBD,EAAwB,GAC3CH,EAAwBD,EAAuB,yBAA2BI,KAe3B,KA2B7CuB,GAhBYb,EALkB,WAChCD,EAA8BD,EAA6B,GAC3DD,EAAuBD,EAAsB,qCAAuCE,IAGlEG,EAgB8C,IAfzDa,IAAEC,SAASf,EAAIC,EAAO,CAAEe,SAAS,KAgB5C,OACI,sBAAKvC,UAAU,iBAAf,UACI,cAAC,EAAD,CAAWH,KAAK,eAAeE,aAAc,kBAnDjDa,EAAuBD,EAAsB,QAC7CH,EAAsBD,EAAqB,iCAAmCI,MAmD1E,cAAC,EAAD,CAAWd,KAAK,WAAWE,aAAc,kBAAM0B,OAC/C,sBAAKzB,UAAU,eAAf,UACI,wBAAQwC,GAAG,eAAeC,QAAS,kBA9B3CvB,EAA0BD,EAAyB,QACnDD,EAAmBD,EAAkB,6CAA+CE,IA6B5E,uCACA,wBAAQuB,GAAG,aAAaC,QAAS,kBAAML,KAAvC,uCAEJ,sBAAKpC,UAAU,WAAf,UACI,0BAAU0C,MAAOnC,EAAoBoC,SAAU,kBAAMnC,EAAsBD,MAC3E,0BAAUmC,MAAOjC,EAAsBkC,SAAU,kBAAMjC,EAAwBD,MAC/E,0BAAUiC,MAAO3B,EAAiB4B,SAAU,kBAAM3B,EAAmBD,MACrE,0BAAU2B,MAAOvB,EAAqBwB,SAAU,kBAAMvB,EAAuBD,a,MChE9EyB,MAXf,WACE,OACE,sBAAK5C,UAAU,MAAf,UACA,iCACE,oBAAIC,MAAS,CAACC,MAAO,SAArB,yCAEF,cAAC,EAAD,QCGW2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.02bd163b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles.css'\r\nconst SearchBar = (props) => {\r\n    var name = props.name;\r\n    var placeholder = \"do \" + name+ \" search\";\r\n    var keyUpHandler = props.keyUpHandler;\r\n    return (\r\n    <div className=\"search-bar\">\r\n        <span style={{color:'white'}}>{name} Search Box</span>\r\n        <input type = \"text\" onKeyUp={keyUpHandler} className=\"text-search\" placeholder={placeholder}></input>\r\n    </div>)\r\n}\r\nexport default SearchBar;","import React, { useState } from 'react'\r\nimport SearchBar from './SearchBar'\r\nimport './styles.css'\r\nimport _ from 'lodash'\r\nconst Search = (props) => {\r\n\r\n    const [normalSearchString, setNormalSearchString] = useState(\"\")\r\n    const [debounceSearchString, setDebounceSearchString] = useState(\"\")\r\n    const [normalSearchcounter, setNormalSearchCounter] = useState(0);\r\n    const [debounceSearchCounter, setDebounceCounter] = useState(0)\r\n\r\n    const [normalHeavyCall, setNormalHeavyCall] = useState(\"\")\r\n    const [normalHeavyCallCounter, setNormalHeavyCallCounter] = useState(0)\r\n    const [throttlingHeavyCall, setThrottlingHeavyCall] = useState(\"\")\r\n    const [throttlingHeavyCallCounter, setThrottlingHeavyCallCounter] = useState(0)\r\n\r\n    function makeAPICall() {\r\n        setNormalSearchCounter(normalSearchcounter + 1)\r\n        setNormalSearchString(normalSearchString + \"\\n Method without Debouncing :\" + normalSearchcounter);\r\n    }\r\n\r\n    function makeAPICallWithDebouncing() {\r\n        setDebounceCounter(debounceSearchCounter + 1)\r\n        setDebounceSearchString(debounceSearchString + \"\\n Debouncing Method :\" + debounceSearchCounter);\r\n    }\r\n\r\n    const debounce = (fn, time) => {\r\n        let timer;\r\n        return function () {\r\n\r\n            let context = this,\r\n                args = arguments;\r\n            clearTimeout(timer);\r\n            timer = setTimeout(() => {\r\n                fn.apply(context, args);\r\n            }, time)\r\n        }\r\n    }\r\n    const lookup = debounce(makeAPICallWithDebouncing, 300);\r\n\r\n    const makeHeavyCall = () => {\r\n        setNormalHeavyCallCounter(normalHeavyCallCounter + 1)\r\n        setNormalHeavyCall(normalHeavyCall + \"\\nWithout Throttling: doing a heavy call: \" + normalHeavyCallCounter);\r\n    }\r\n    const makeHeavyCallWithThrottling = () => {\r\n        setThrottlingHeavyCallCounter(throttlingHeavyCallCounter + 1)\r\n        setThrottlingHeavyCall(throttlingHeavyCall + \"\\nThrottling: doing a heavy call: \" + throttlingHeavyCallCounter);\r\n    }\r\n\r\n    const throttle = (fn, limit) => {\r\n        return _.throttle(fn, limit, { leading: false })\r\n        // let flag = true;\r\n        // return function () {\r\n        //     let context = this;\r\n        //     let args = arguments;\r\n        //     if (flag) {\r\n        //         fn.apply(context, args);\r\n        //         flag = false;\r\n        //         setTimeout(() => {\r\n        //             flag = true;\r\n        //         }, limit);\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    const betterAPiCallFunction = throttle(makeHeavyCallWithThrottling, 1000);\r\n    return (\r\n        <div className=\"main-container\">\r\n            <SearchBar name=\"Non Debounce\" keyUpHandler={() => makeAPICall()}></SearchBar>\r\n            <SearchBar name=\"Debounce\" keyUpHandler={() => lookup()}></SearchBar>\r\n            <div className=\"button-group\">\r\n                <button id=\"noThrottling\" onClick={() => makeHeavyCall()}>Search Without Throttling</button>\r\n                <button id=\"throttling\" onClick={() => betterAPiCallFunction()}>Search With Throttling</button>\r\n            </div>\r\n            <div className=\"displays\">\r\n                <textarea value={normalSearchString} onChange={() => setNormalSearchString(normalSearchString)} ></textarea>\r\n                <textarea value={debounceSearchString} onChange={() => setDebounceSearchString(debounceSearchString)}></textarea>\r\n                <textarea value={normalHeavyCall} onChange={() => setNormalHeavyCall(normalHeavyCall)}></textarea>\r\n                <textarea value={throttlingHeavyCall} onChange={() => setThrottlingHeavyCall(throttlingHeavyCall)}></textarea>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Search;","import Search from './components/Search.js'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\"> \n    <header>\n      <h2 style = {{color: 'white'}}>Debouncing and Throttling</h2>\n    </header>\n    <Search></Search>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}